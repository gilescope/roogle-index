{"root":"0:0","crate_version":"0.6.3","includes_private":false,"index":{"1:7015":{"id":"1:7015","crate_id":1,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7016","1:7017","1:7018","1:7019","1:7020","1:7021","1:7022"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2637","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2714","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:2994":{"id":"1:2994","crate_id":1,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2995"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3456":{"id":"1:3456","crate_id":1,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3457","1:3458","1:3459","1:3460"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromResidual","id":"1:3461","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"1:3456","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"b:1:3679-0:166":{"id":"b:1:3679-0:166","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3677","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["1:3681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:128":{"id":"0:128","crate_id":0,"name":"next_u32_via_fill","span":{"filename":"src/impls.rs","begin":[136,0],"end":[140,1]},"visibility":"public","docs":"Implement `next_u32` via `fill_bytes`, little-endian order.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["rng",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"R"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RngCore","id":"0:140","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[]},"header":[],"abi":"\"Rust\""}},"1:9415":{"id":"1:9415","crate_id":1,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9416"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:67":{"id":"0:67","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[295,0],"end":[304,1]},"visibility":{"restricted":{"parent":"0:13","path":"::block"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BlockRngCore","id":"0:40","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"1:9394","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9394","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["0:69"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3257":{"id":"1:3257","crate_id":1,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3259"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"1:3260","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:3178":{"id":"1:3178","crate_id":1,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3180"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3098":{"id":"1:3098","crate_id":1,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3100","1:3101"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:9401":{"id":"1:9401","crate_id":1,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9402"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:9600":{"id":"1:9600","crate_id":1,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9601","1:9603"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:2615":{"id":"1:2615","crate_id":1,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2617"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"1:3254":{"id":"1:3254","crate_id":1,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3256"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3257","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:9345":{"id":"1:9345","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9346","1:9347","1:9349"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12007":{"id":"1:12007","crate_id":1,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:12009","1:12010","1:12011","1:12012","1:12013","1:12014","1:12015"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3118":{"id":"1:3118","crate_id":1,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3120"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:7425":{"id":"1:7425","crate_id":1,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7427"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12708":{"id":"1:12708","crate_id":1,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:12709","1:12710"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"b:1:2621-0:166":{"id":"b:1:2621-0:166","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2615","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["1:2623"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3088":{"id":"1:3088","crate_id":1,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3090","1:3091"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:2626":{"id":"1:2626","crate_id":1,"name":"borrow_mut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"b:1:2945-0:98":{"id":"b:1:2945-0:98","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2922","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2919","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2948"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:2672":{"id":"1:2672","crate_id":1,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2667","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:9405":{"id":"1:9405","crate_id":1,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9406"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:134":{"id":"0:134","crate_id":0,"name":"le","span":{"filename":"src/le.rs","begin":[9,0],"end":[56,1]},"visibility":"public","docs":"Little-Endian utilities\n\nLittle-Endian order has been chosen for internal usage; this makes some\nuseful functions available.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:138","0:139"]}},"1:3681":{"id":"1:3681","crate_id":1,"name":"type_id","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"1:43274","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:156":{"id":"0:156","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[395,0],"end":[415,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RngCore","id":"0:140","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RngCore","id":"0:140","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"R"}}},"items":["0:159","0:160","0:161","0:162"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:147":{"id":"0:147","crate_id":0,"name":"Seed","span":{"filename":"src/lib.rs","begin":[263,4],"end":[263,45]},"visibility":"default","docs":"Seed type, which is restricted to types mutably-dereferencable as `u8`\narrays (we recommend `[u8; N]` for some `N`).\n\nIt is recommended to seed PRNGs with a seed of at least circa 100 bits,\nwhich means an array of `[u8; 12]` or greater to avoid picking RNGs with\npartially overlapping periods.\n\nFor cryptographic RNG's a seed of 256 bits is recommended, `[u8; 32]`.\n\n\n# Implementing `SeedableRng` for RNGs with large seeds\n\nNote that the required traits `core::default::Default` and\n`core::convert::AsMut<u8>` are not implemented for large arrays\n`[u8; N]` with `N` > 32. To be able to implement the traits required by\n`SeedableRng` for RNGs with such large seeds, the newtype pattern can be\nused:\n\n```\nuse rand_core::SeedableRng;\n\nconst N: usize = 64;\npub struct MyRngSeed(pub [u8; N]);\npub struct MyRng(MyRngSeed);\n\nimpl Default for MyRngSeed {\n    fn default() -> MyRngSeed {\n        MyRngSeed([0; N])\n    }\n}\n\nimpl AsMut<[u8]> for MyRngSeed {\n    fn as_mut(&mut self) -> &mut [u8] {\n        &mut self.0\n    }\n}\n\nimpl SeedableRng for MyRng {\n    type Seed = MyRngSeed;\n\n    fn from_seed(seed: MyRngSeed) -> MyRng {\n        MyRng(seed)\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"1:2994","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsMut","id":"1:2916","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:82":{"id":"0:82","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[418,0],"end":[435,1]},"visibility":{"restricted":{"parent":"0:13","path":"::block"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BlockRngCore","id":"0:40","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SeedableRng","id":"0:146","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64"],"trait":{"kind":"resolved_path","inner":{"name":"SeedableRng","id":"0:146","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["0:84","0:85","0:86","0:87"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3135":{"id":"1:3135","crate_id":1,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3136","1:3137"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12723":{"id":"1:12723","crate_id":1,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:12724","1:12725","1:12726"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:140":{"id":"0:140","crate_id":0,"name":"RngCore","span":{"filename":"src/lib.rs","begin":[142,0],"end":[185,1]},"visibility":"public","docs":"The core of a random number generator.\n\nThis trait encapsulates the low-level functionality common to all\ngenerators, and is the \"back end\", to be implemented by generators.\nEnd users should normally use the `Rng` trait from the [`rand`] crate,\nwhich is automatically implemented for every type implementing `RngCore`.\n\nThree different methods for generating random data are provided since the\noptimal implementation of each is dependent on the type of generator. There\nis no required relationship between the output of each; e.g. many\nimplementations of [`fill_bytes`] consume a whole number of `u32` or `u64`\nvalues and drop any remaining unused bytes. The same can happen with the\n[`next_u32`] and [`next_u64`] methods, implementations may discard some\nrandom bits for efficiency.\n\nThe [`try_fill_bytes`] method is a variant of [`fill_bytes`] allowing error\nhandling; it is not deemed sufficiently useful to add equivalents for\n[`next_u32`] or [`next_u64`] since the latter methods are almost always used\nwith algorithmic generators (PRNGs), which are normally infallible.\n\nImplementers should produce bits uniformly. Pathological RNGs (e.g. always\nreturning the same value, or never setting certain bits) can break rejection\nsampling used by random distributions, and also break other RNGs when\nseeding them via [`SeedableRng::from_rng`].\n\nAlgorithmic generators implementing [`SeedableRng`] should normally have\n*portable, reproducible* output, i.e. fix Endianness when converting values\nto avoid platform differences, and avoid making any changes which affect\noutput (except by communicating that the release has breaking changes).\n\nTypically an RNG will implement only one of the methods available\nin this trait directly, then use the helper functions from the\n[`impls`] module to implement the other methods.\n\nIt is recommended that implementations also implement:\n\n- `Debug` with a custom implementation which *does not* print any internal\n  state (at least, [`CryptoRng`]s should not risk leaking state through\n  `Debug`).\n- `Serialize` and `Deserialize` (from Serde), preferably making Serde\n  support optional at the crate level in PRNG libs.\n- `Clone`, if possible.\n- *never* implement `Copy` (accidental copies may cause repeated values).\n- *do not* implement `Default` for pseudorandom generators, but instead\n  implement [`SeedableRng`], to guide users towards proper seeding.\n  External / hardware RNGs can choose to implement `Default`.\n- `Eq` and `PartialEq` could be implemented, but are probably not useful.\n\n# Example\n\nA simple example, obviously not generating very *random* output:\n\n```\n#![allow(dead_code)]\nuse rand_core::{RngCore, Error, impls};\n\nstruct CountingRng(u64);\n\nimpl RngCore for CountingRng {\n    fn next_u32(&mut self) -> u32 {\n        self.next_u64() as u32\n    }\n\n    fn next_u64(&mut self) -> u64 {\n        self.0 += 1;\n        self.0\n    }\n\n    fn fill_bytes(&mut self, dest: &mut [u8]) {\n        impls::fill_bytes_via_next(self, dest)\n    }\n\n    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {\n        Ok(self.fill_bytes(dest))\n    }\n}\n```\n\n[`rand`]: https://docs.rs/rand\n[`try_fill_bytes`]: RngCore::try_fill_bytes\n[`fill_bytes`]: RngCore::fill_bytes\n[`next_u32`]: RngCore::next_u32\n[`next_u64`]: RngCore::next_u64","links":{"`impls`":"0:111","`CryptoRng`":"0:145","`SeedableRng`":"0:146","RngCore::next_u32":"0:141","RngCore::try_fill_bytes":"0:144","`SeedableRng::from_rng`":"0:154","RngCore::fill_bytes":"0:143","RngCore::next_u64":"0:142"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:141","0:142","0:143","0:144"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":["0:53","0:76","0:156"]}},"0:40":{"id":"0:40","crate_id":0,"name":"BlockRngCore","span":{"filename":"src/block.rs","begin":[68,0],"end":[78,1]},"visibility":"public","docs":"A trait for RNGs which do not generate random numbers individually, but in\nblocks (typically `[u32; N]`). This technique is commonly used by\ncryptographic RNGs to improve performance.\n\nSee the [module][crate::block] documentation for details.","links":{"crate::block":"0:13"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:41","0:42","0:43"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:65":{"id":"0:65","crate_id":0,"name":"from_rng","span":{"filename":"src/block.rs","begin":[257,4],"end":[259,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["rng",{"kind":"generic","inner":"S"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:44703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RngCore","id":"0:140","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"1:2919":{"id":"1:2919","crate_id":1,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2921"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:9409":{"id":"1:9409","crate_id":1,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9410"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:89":{"id":"0:89","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[437,0],"end":[437,62]},"visibility":{"restricted":{"parent":"0:13","path":"::block"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BlockRngCore","id":"0:40","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"CryptoRng","id":"0:145","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"CryptoRng","id":"0:145","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:11935":{"id":"1:11935","crate_id":1,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:11936","1:11937"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"a:1:8364-0:166":{"id":"a:1:8364-0:166","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Results","self_type":{"kind":"generic","inner":"R"},"trait":{"kind":"resolved_path","inner":{"name":"BlockRngCore","id":"0:40","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:76":{"id":"0:76","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[349,0],"end":[416,1]},"visibility":{"restricted":{"parent":"0:13","path":"::block"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BlockRngCore","id":"0:40","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","binding":{"equality":{"kind":"primitive","inner":"u64"}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Results","self_type":{"kind":"generic","inner":"R"},"trait":{"kind":"resolved_path","inner":{"name":"BlockRngCore","id":"0:40","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"1:2913","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u64"}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsMut","id":"1:2916","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u64"}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RngCore","id":"0:140","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["0:78","0:79","0:80","0:81"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3174":{"id":"1:3174","crate_id":1,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3176"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:42":{"id":"0:42","crate_id":0,"name":"Results","span":{"filename":"src/block.rs","begin":[74,4],"end":[74,70]},"visibility":"default","docs":"Results type. This is the 'block' an RNG implementing `BlockRngCore`\ngenerates, which will usually be an array like `[u32; 16]`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"1:2913","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:40","args":null,"param_names":[]}}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsMut","id":"1:2916","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:40","args":null,"param_names":[]}}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"1:2994","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:75":{"id":"0:75","crate_id":0,"name":"generate_and_set","span":{"filename":"src/block.rs","begin":[341,4],"end":[346,5]},"visibility":"public","docs":"Generate a new set of results immediately, setting the index to the\ngiven value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:86":{"id":"0:86","crate_id":0,"name":"seed_from_u64","span":{"filename":"src/block.rs","begin":[427,4],"end":[429,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["seed",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"1:9403":{"id":"1:9403","crate_id":1,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9404"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:74":{"id":"0:74","crate_id":0,"name":"reset","span":{"filename":"src/block.rs","begin":[333,4],"end":[336,5]},"visibility":"public","docs":"Reset the number of available results.\nThis will force a new set of results to be generated on next use.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"1:3170":{"id":"1:3170","crate_id":1,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3172"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:9407":{"id":"1:9407","crate_id":1,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9408"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:21520":{"id":"1:21520","crate_id":1,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:21510","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:63":{"id":"0:63","crate_id":0,"name":"from_seed","span":{"filename":"src/block.rs","begin":[247,4],"end":[249,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["seed",{"kind":"qualified_path","inner":{"name":"Seed","self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:146","args":null,"param_names":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:47":{"id":"0:47","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[141,0],"end":[179,1]},"visibility":{"restricted":{"parent":"0:13","path":"::block"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BlockRngCore","id":"0:40","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["0:49","0:50","0:51","0:52"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:2922":{"id":"1:2922","crate_id":1,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2924"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3316":{"id":"1:3316","crate_id":1,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3318"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"1:3312","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:69":{"id":"0:69","crate_id":0,"name":"fmt","span":{"filename":"src/block.rs","begin":[296,4],"end":[303,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:9355","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:9344","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"a:1:3016-0:166":{"id":"a:1:3016-0:166","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3016","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Results","self_type":{"kind":"generic","inner":"R"},"trait":{"kind":"resolved_path","inner":{"name":"BlockRngCore","id":"0:40","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3016","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3016","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:138":{"id":"0:138","crate_id":0,"name":"read_u32_into","span":{"filename":"src/le.rs","begin":[18,0],"end":[23,1]},"visibility":"public","docs":"Reads unsigned 32 bit integers from `src` into `dst`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["src",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u32"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\""}},"a:1:8365-0:166":{"id":"a:1:8365-0:166","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8365","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Results","self_type":{"kind":"generic","inner":"R"},"trait":{"kind":"resolved_path","inner":{"name":"BlockRngCore","id":"0:40","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8365","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8365","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:87":{"id":"0:87","crate_id":0,"name":"from_rng","span":{"filename":"src/block.rs","begin":[432,4],"end":[434,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["rng",{"kind":"generic","inner":"S"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:44703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RngCore","id":"0:140","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:111":{"id":"0:111","crate_id":0,"name":"impls","span":{"filename":"src/impls.rs","begin":[9,0],"end":[184,1]},"visibility":"public","docs":"Helper functions for implementing `RngCore` functions.\n\nFor cross-platform reproducibility, these functions all use Little Endian:\nleast-significant part first. For example, `next_u64_via_u32` takes `u32`\nvalues `x, y`, then outputs `(y << 32) | x`. To implement `next_u32`\nfrom `next_u64` in little-endian order, one should use `next_u64() as u32`.\n\nByte-swapping (like the std `to_le` functions) is only needed to convert\nto/from byte sequences, and since its purpose is reproducibility,\nnon-reproducible sources (e.g. `OsRng`) need not bother with it.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:118","0:120","0:126","0:127","0:128","0:131"]}},"0:173":{"id":"0:173","crate_id":0,"name":"clone","span":{"filename":"src/block.rs","begin":[115,9],"end":[115,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:51":{"id":"0:51","crate_id":0,"name":"reset","span":{"filename":"src/block.rs","begin":[167,4],"end":[169,5]},"visibility":"public","docs":"Reset the number of available results.\nThis will force a new set of results to be generated on next use.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"1:9411":{"id":"1:9411","crate_id":1,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9412"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:2929":{"id":"1:2929","crate_id":1,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2931","1:2932"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12016":{"id":"1:12016","crate_id":1,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:12018","1:12019","1:12020","1:12021"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:120":{"id":"0:120","crate_id":0,"name":"fill_bytes_via_next","span":{"filename":"src/impls.rs","begin":[37,0],"end":[53,1]},"visibility":"public","docs":"Implement `fill_bytes` via `next_u64` and `next_u32`, little-endian order.\n\nThe fastest way to fill a slice is usually to work as long as possible with\nintegers. That is why this method mostly uses `next_u64`, and only when\nthere are 4 or less bytes remaining at the end of the slice it uses\n`next_u32` once.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["rng",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"R"}}}],["dest",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RngCore","id":"0:140","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[]},"header":[],"abi":"\"Rust\""}},"a:1:3028-0:174":{"id":"a:1:3028-0:174","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3028","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Results","self_type":{"kind":"generic","inner":"R"},"trait":{"kind":"resolved_path","inner":{"name":"BlockRngCore","id":"0:40","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3028","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3028","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:148":{"id":"0:148","crate_id":0,"name":"from_seed","span":{"filename":"src/lib.rs","begin":[290,4],"end":[290,43]},"visibility":"default","docs":"Create a new PRNG using the given seed.\n\nPRNG implementations are allowed to assume that bits in the seed are\nwell distributed. That means usually that the number of one and zero\nbits are roughly equal, and values like 0, 1 and (size - 1) are unlikely.\nNote that many non-cryptographic PRNGs will show poor quality output\nif this is not adhered to. If you wish to seed from simple numbers, use\n`seed_from_u64` instead.\n\nAll PRNG implementations should be reproducible unless otherwise noted:\ngiven a fixed `seed`, the same sequence of output should be produced\non all runs, library versions and architectures (e.g. check endianness).\nAny \"value-breaking\" changes to the generator should require bumping at\nleast the minor version and documentation of the change.\n\nIt is not required that this function yield the same state as a\nreference implementation of the PRNG given equivalent seed; if necessary\nanother constructor replicating behaviour from a reference\nimplementation can be added.\n\nPRNG implementations should make sure `from_seed` never panics. In the\ncase that some special values (like an all zero seed) are not viable\nseeds it is preferable to map these to alternative constant value(s),\nfor example `0xBAD5EEDu32` or `0x0DDB1A5E5BAD5EEDu64` (\"odd biases? bad\nseed\"). This is assuming only a small number of values must be rejected.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["seed",{"kind":"qualified_path","inner":{"name":"Seed","self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:146","args":null,"param_names":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":false}},"b:1:2955-0:166":{"id":"b:1:2955-0:166","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2929","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:2925","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["1:2958","1:2959"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:108":{"id":"0:108","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[136,4],"end":[149,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:9355","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:9344","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"1:21666":{"id":"1:21666","crate_id":1,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdElement","id":"1:22232","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:21657","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:105":{"id":"0:105","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[118,0],"end":[133,1]},"visibility":{"restricted":{"parent":"0:91","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9394","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:106"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2949-0:174":{"id":"b:1:2949-0:174","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2922","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["1:2951"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:1:8365-0:98":{"id":"a:1:8365-0:98","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8365","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:3025":{"id":"1:3025","crate_id":1,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:9641":{"id":"1:9641","crate_id":1,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9642","1:9643","1:9644"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"a:1:3057-0:166":{"id":"a:1:3057-0:166","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3057","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Results","self_type":{"kind":"generic","inner":"R"},"trait":{"kind":"resolved_path","inner":{"name":"BlockRngCore","id":"0:40","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3057","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3057","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:3160":{"id":"1:3160","crate_id":1,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3162","1:3163"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:79":{"id":"0:79","crate_id":0,"name":"next_u64","span":{"filename":"src/block.rs","begin":[379,4],"end":[389,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"b:1:2960-0:98":{"id":"b:1:2960-0:98","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2919","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2929","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2963","1:2964"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3294":{"id":"1:3294","crate_id":1,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3296","1:3297","1:3298"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"b:1:2621-0:98":{"id":"b:1:2621-0:98","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2615","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2623"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3026":{"id":"1:3026","crate_id":1,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2637","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:21937":{"id":"1:21937","crate_id":1,"name":"Select","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Mask","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:21931","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Mask"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:13":{"id":"0:13","crate_id":0,"name":"block","span":{"filename":"src/block.rs","begin":[9,0],"end":[437,62]},"visibility":"public","docs":"The `BlockRngCore` trait and implementation helpers\n\nThe [`BlockRngCore`] trait exists to assist in the implementation of RNGs\nwhich generate a block of data in a cache instead of returning generated\nvalues directly.\n\nUsage of this trait is optional, but provides two advantages:\nimplementations only need to concern themselves with generation of the\nblock, not the various [`RngCore`] methods (especially [`fill_bytes`], where\nthe optimal implementations are not trivial), and this allows\n`ReseedingRng` (see [`rand`](https://docs.rs/rand) crate) perform periodic\nreseeding with very low overhead.\n\n# Example\n\n```no_run\nuse rand_core::{RngCore, SeedableRng};\nuse rand_core::block::{BlockRngCore, BlockRng};\n\nstruct MyRngCore;\n\nimpl BlockRngCore for MyRngCore {\n    type Item = u32;\n    type Results = [u32; 16];\n\n    fn generate(&mut self, results: &mut Self::Results) {\n        unimplemented!()\n    }\n}\n\nimpl SeedableRng for MyRngCore {\n    type Seed = [u8; 32];\n    fn from_seed(seed: Self::Seed) -> Self {\n        unimplemented!()\n    }\n}\n\n// optionally, also implement CryptoRng for MyRngCore\n\n// Final RNG.\nlet mut rng = BlockRng::<MyRngCore>::seed_from_u64(0);\nprintln!(\"First value: {}\", rng.next_u32());\n```\n\n[`BlockRngCore`]: crate::block::BlockRngCore\n[`fill_bytes`]: RngCore::fill_bytes","links":{"crate::block::BlockRngCore":"0:40","RngCore::fill_bytes":"0:143","`RngCore`":"0:140"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:40","0:166","0:174"]}},"1:12027":{"id":"1:12027","crate_id":1,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12022","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:2851":{"id":"1:2851","crate_id":1,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:2850","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:80":{"id":"0:80","crate_id":0,"name":"fill_bytes","span":{"filename":"src/block.rs","begin":[392,4],"end":[409,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["dest",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"a:1:3028-0:166":{"id":"a:1:3028-0:166","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3028","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Results","self_type":{"kind":"generic","inner":"R"},"trait":{"kind":"resolved_path","inner":{"name":"BlockRngCore","id":"0:40","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3028","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3028","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:104":{"id":"0:104","crate_id":0,"name":"code","span":{"filename":"src/error.rs","begin":[106,4],"end":[115,5]},"visibility":"public","docs":"Retrieve the error code, if any.\n\nIf this `Error` was constructed via `From<NonZeroU32>`, then this method\nwill return this `NonZeroU32` code (for `no_std` this is always the\ncase). Otherwise, this method will return `None`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:44577","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NonZeroU32","id":"1:23061","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:73":{"id":"0:73","crate_id":0,"name":"index","span":{"filename":"src/block.rs","begin":[326,4],"end":[328,5]},"visibility":"public","docs":"Get the index into the result buffer.\n\nIf this is equal to or larger than the size of the result buffer then\nthe buffer is \"empty\" and `generate()` must be called to produce new\nresults.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:55":{"id":"0:55","crate_id":0,"name":"next_u32","span":{"filename":"src/block.rs","begin":[186,4],"end":[194,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"a:1:3016-0:98":{"id":"a:1:3016-0:98","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3016","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:2623":{"id":"1:2623","crate_id":1,"name":"borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:127":{"id":"0:127","crate_id":0,"name":"fill_via_u64_chunks","span":{"filename":"src/impls.rs","begin":[131,0],"end":[133,1]},"visibility":"public","docs":"Implement `fill_bytes` by reading chunks from the output buffer of a block\nbased RNG.\n\nThe return values are `(consumed_u64, filled_u8)`.\n`filled_u8` is the number of filled bytes in `dest`, which may be less than\nthe length of `dest`.\n`consumed_u64` is the number of words consumed from `src`, which is the same\nas `filled_u8 / 8` rounded up.\n\nSee `fill_via_u32_chunks` for an example.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["src",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u64"}}}}],["dest",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\""}},"1:3260":{"id":"1:3260","crate_id":1,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3262","1:3263"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3024":{"id":"1:3024","crate_id":1,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12022":{"id":"1:12022","crate_id":1,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:12024","1:12025","1:12026"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Searcher","id":"1:12016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:8887":{"id":"1:8887","crate_id":1,"name":"Stream","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8888","1:8889","1:8890"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3083":{"id":"1:3083","crate_id":1,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3085","1:3086"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:103":{"id":"0:103","crate_id":0,"name":"raw_os_error","span":{"filename":"src/error.rs","begin":[87,4],"end":[98,5]},"visibility":"public","docs":"Extract the raw OS error code (if this error came from the OS)\n\nThis method is identical to `std::io::Error::raw_os_error()`, except\nthat it works in `no_std` contexts. If this method returns `None`, the\nerror value can still be formatted via the `Diplay` implementation.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:44577","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"1:3021":{"id":"1:3021","crate_id":1,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:162":{"id":"0:162","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/lib.rs","begin":[412,4],"end":[414,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["dest",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:44703","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"1:3240":{"id":"1:3240","crate_id":1,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3241"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"1:3227","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:161":{"id":"0:161","crate_id":0,"name":"fill_bytes","span":{"filename":"src/lib.rs","begin":[407,4],"end":[409,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["dest",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"a:1:8364-0:174":{"id":"a:1:8364-0:174","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Results","self_type":{"kind":"generic","inner":"R"},"trait":{"kind":"resolved_path","inner":{"name":"BlockRngCore","id":"0:40","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:106":{"id":"0:106","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[119,4],"end":[132,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:9355","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:9344","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"1:3251":{"id":"1:3251","crate_id":1,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3252"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:52":{"id":"0:52","crate_id":0,"name":"generate_and_set","span":{"filename":"src/block.rs","begin":[174,4],"end":[178,5]},"visibility":"public","docs":"Generate a new set of results immediately, setting the index to the\ngiven value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"a:1:8364-0:98":{"id":"a:1:8364-0:98","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:3114":{"id":"1:3114","crate_id":1,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3116"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:170":{"id":"0:170","crate_id":0,"name":"core","span":{"filename":"src/block.rs","begin":[127,4],"end":[127,15]},"visibility":"public","docs":"The *core* part of the RNG, implementing the `generate` function.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"R"}},"1:2618":{"id":"1:2618","crate_id":1,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2620"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2615","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"a:1:3028-0:98":{"id":"a:1:3028-0:98","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3028","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:9969":{"id":"1:9969","crate_id":1,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:9971","1:9972","1:9973","1:9974","1:9975","1:9976","1:9977"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:9960","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:109":{"id":"0:109","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[152,0],"end":[166,1]},"visibility":{"restricted":{"parent":"0:91","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2922","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NonZeroU32","id":"1:23061","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:110"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:7510":{"id":"1:7510","crate_id":1,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7511","1:7512","1:7513","1:7514","1:7518","1:7521"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:7646","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:3016":{"id":"1:3016","crate_id":1,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:0":{"id":"0:0","crate_id":0,"name":"rand_core","span":{"filename":"src/lib.rs","begin":[10,0],"end":[502,1]},"visibility":"public","docs":"Random number generation traits\n\nThis crate is mainly of interest to crates publishing implementations of\n[`RngCore`]. Other users are encouraged to use the [`rand`] crate instead\nwhich re-exports the main traits and error types.\n\n[`RngCore`] is the core trait implemented by algorithmic pseudo-random number\ngenerators and external random-number sources.\n\n[`SeedableRng`] is an extension trait for construction from fixed seeds and\nother random number generators.\n\n[`Error`] is provided for error-handling. It is safe to use in `no_std`\nenvironments.\n\nThe [`impls`] and [`le`] sub-modules include a few small functions to assist\nimplementation of [`RngCore`].\n\n[`rand`]: https://docs.rs/rand","links":{"`impls`":"0:111","`RngCore`":"0:140","`Error`":"0:98","`SeedableRng`":"0:146","`le`":"0:134"},"attrs":["#![doc(html_logo_url =\n       \"https://www.rust-lang.org/logos/rust-logo-128x128-blk.png\",\n       html_favicon_url = \"https://www.rust-lang.org/favicon.ico\",\n       html_root_url = \"https://rust-random.github.io/rand/\")]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![doc(test(attr(allow(unused_variables), deny(warnings))))]","#![no_std]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:13","0:111","0:134","0:98","0:140","0:145","0:146"]}},"1:3130":{"id":"1:3130","crate_id":1,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3132"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:159":{"id":"0:159","crate_id":0,"name":"next_u32","span":{"filename":"src/lib.rs","begin":[397,4],"end":[399,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"1:8365":{"id":"1:8365","crate_id":1,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:8364":{"id":"1:8364","crate_id":1,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"b:1:3679-0:98":{"id":"b:1:3679-0:98","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3677","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:3681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:7466":{"id":"1:7466","crate_id":1,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7467","1:7468","1:7469"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:154":{"id":"0:154","crate_id":0,"name":"from_rng","span":{"filename":"src/lib.rs","begin":[361,4],"end":[365,5]},"visibility":"default","docs":"Create a new PRNG seeded from another `Rng`.\n\nThis may be useful when needing to rapidly seed many PRNGs from a master\nPRNG, and to allow forking of PRNGs. It may be considered deterministic.\n\nThe master PRNG should be at least as high quality as the child PRNGs.\nWhen seeding non-cryptographic child PRNGs, we recommend using a\ndifferent algorithm for the master PRNG (ideally a CSPRNG) to avoid\ncorrelations between the child PRNGs. If this is not possible (e.g.\nforking using small non-crypto PRNGs) ensure that your PRNG has a good\nmixing function on the output or consider use of a hash function with\n`from_seed`.\n\nNote that seeding `XorShiftRng` from another `XorShiftRng` provides an\nextreme example of what can go wrong: the new PRNG will be a clone\nof the parent.\n\nPRNG implementations are allowed to assume that a good RNG is provided\nfor seeding, and that it is cryptographically secure when appropriate.\nAs of `rand` 0.7 / `rand_core` 0.5, implementations overriding this\nmethod should ensure the implementation satisfies reproducibility\n(in prior versions this was not required).\n\n[`rand`]: https://docs.rs/rand","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["rng",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:44703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RngCore","id":"0:140","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:44":{"id":"0:44","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[131,0],"end":[139,1]},"visibility":{"restricted":{"parent":"0:13","path":"::block"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BlockRngCore","id":"0:40","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"1:9394","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9394","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["0:46"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:2916":{"id":"1:2916","crate_id":1,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2918"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"0:64":{"id":"0:64","crate_id":0,"name":"seed_from_u64","span":{"filename":"src/block.rs","begin":[252,4],"end":[254,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["seed",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:84":{"id":"0:84","crate_id":0,"name":"Seed","span":{"filename":"src/block.rs","begin":[419,4],"end":[419,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"qualified_path","inner":{"name":"Seed","self_type":{"kind":"generic","inner":"R"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:146","args":null,"param_names":[]}}}},"generics":{"params":[],"where_predicates":[]}}},"1:2925":{"id":"1:2925","crate_id":1,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2927","1:2928"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:146":{"id":"0:146","crate_id":0,"name":"SeedableRng","span":{"filename":"src/lib.rs","begin":[217,0],"end":[390,1]},"visibility":"public","docs":"A random number generator that can be explicitly seeded.\n\nThis trait encapsulates the low-level functionality common to all\npseudo-random number generators (PRNGs, or algorithmic generators).\n\n[`rand`]: https://docs.rs/rand","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:147","0:148","0:149","0:154"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":["0:60","0:82"]}},"1:3104":{"id":"1:3104","crate_id":1,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3106","1:3107"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:7914":{"id":"1:7914","crate_id":1,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:7646","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:2959":{"id":"1:2959","crate_id":1,"name":"try_into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:44703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2929","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"1:3028":{"id":"1:3028","crate_id":1,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3110":{"id":"1:3110","crate_id":1,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3111","1:3112"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:7535":{"id":"1:7535","crate_id":1,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7536","1:7537"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:7646","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:2964":{"id":"1:2964","crate_id":1,"name":"try_from","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:44703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2929","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:149":{"id":"0:149","crate_id":0,"name":"seed_from_u64","span":{"filename":"src/lib.rs","begin":[306,4],"end":[335,5]},"visibility":"default","docs":"Create a new PRNG using a `u64` seed.\n\nThis is a convenience-wrapper around `from_seed` to allow construction\nof any `SeedableRng` from a simple `u64` value. It is designed such that\nlow Hamming Weight numbers like 0 and 1 can be used and should still\nresult in good, independent seeds to the PRNG which is returned.\n\nThis **is not suitable for cryptography**, as should be clear given that\nthe input size is only 64 bits.\n\nImplementations for PRNGs *may* provide their own implementations of\nthis function, but the default implementation should be good enough for\nall purposes. *Changing* the implementation of this function should be\nconsidered a value-breaking change.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["state",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:107":{"id":"0:107","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[135,0],"end":[150,1]},"visibility":{"restricted":{"parent":"0:91","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"1:9401","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:108"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:78":{"id":"0:78","crate_id":0,"name":"next_u32","span":{"filename":"src/block.rs","begin":[354,4],"end":[376,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:144":{"id":"0:144","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/lib.rs","begin":[184,4],"end":[184,71]},"visibility":"default","docs":"Fill `dest` entirely with random data.\n\nThis is the only method which allows an RNG to report errors while\ngenerating random data thus making this the primary method implemented\nby external (true) RNGs (e.g. `OsRng`) which can fail. It may be used\ndirectly to generate keys and to seed (infallible) PRNGs.\n\nOther than error handling, this method is identical to [`RngCore::fill_bytes`];\nthus this may be implemented using `Ok(self.fill_bytes(dest))` or\n`fill_bytes` may be implemented with\n`self.try_fill_bytes(dest).unwrap()` or more specific error handling.","links":{"`RngCore::fill_bytes`":"0:143"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["dest",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:44703","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":false}},"1:9610":{"id":"1:9610","crate_id":1,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9611","1:9612","1:9613","1:9614","1:9615","1:9616","1:9617","1:9618","1:9619","1:9620","1:9621","1:9622","1:9623","1:9624"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:7917":{"id":"1:7917","crate_id":1,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:7646","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:100":{"id":"0:100","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[28,0],"end":[116,1]},"visibility":{"restricted":{"parent":"0:91","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:101","0:102","0:103","0:104"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:2948":{"id":"1:2948","crate_id":1,"name":"into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"b:1:2960-0:174":{"id":"b:1:2960-0:174","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2919","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2929","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["1:2963","1:2964"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:2955-0:98":{"id":"b:1:2955-0:98","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2929","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:2925","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2958","1:2959"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:141":{"id":"0:141","crate_id":0,"name":"next_u32","span":{"filename":"src/lib.rs","begin":[148,4],"end":[148,34]},"visibility":"default","docs":"Return the next random `u32`.\n\nRNGs must implement at least one method from this trait directly. In\nthe case this method is not implemented directly, it can be implemented\nusing `self.next_u64() as u32` or via [`impls::next_u32_via_fill`].","links":{"`impls::next_u32_via_fill`":"0:128"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":false}},"1:3312":{"id":"1:3312","crate_id":1,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3314","1:3315"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"1:3126":{"id":"1:3126","crate_id":1,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3128"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3122":{"id":"1:3122","crate_id":1,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3124"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:11457":{"id":"1:11457","crate_id":1,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:11458","1:11459"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:62":{"id":"0:62","crate_id":0,"name":"Seed","span":{"filename":"src/block.rs","begin":[244,4],"end":[244,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"qualified_path","inner":{"name":"Seed","self_type":{"kind":"generic","inner":"R"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:146","args":null,"param_names":[]}}}},"generics":{"params":[],"where_predicates":[]}}},"1:7475":{"id":"1:7475","crate_id":1,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7477","1:7479","1:7480"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[243,0],"end":[260,1]},"visibility":{"restricted":{"parent":"0:13","path":"::block"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BlockRngCore","id":"0:40","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SeedableRng","id":"0:146","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["from_rng","seed_from_u64"],"trait":{"kind":"resolved_path","inner":{"name":"SeedableRng","id":"0:146","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["0:62","0:63","0:64","0:65"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:142":{"id":"0:142","crate_id":0,"name":"next_u64","span":{"filename":"src/lib.rs","begin":[155,4],"end":[155,34]},"visibility":"default","docs":"Return the next random `u64`.\n\nRNGs must implement at least one method from this trait directly. In\nthe case this method is not implemented directly, it can be implemented\nvia [`impls::next_u64_via_u32`] or via [`impls::next_u64_via_fill`].","links":{"`impls::next_u64_via_fill`":"0:131","`impls::next_u64_via_u32`":"0:118"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":false}},"0:41":{"id":"0:41","crate_id":0,"name":"Item","span":{"filename":"src/block.rs","begin":[70,4],"end":[70,14]},"visibility":"default","docs":"Results element type, e.g. `u32`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"bounds":[],"default":null}},"b:1:2955-0:174":{"id":"b:1:2955-0:174","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2929","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:2925","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["1:2958","1:2959"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:3679-0:174":{"id":"b:1:3679-0:174","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3677","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["1:3681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:85":{"id":"0:85","crate_id":0,"name":"from_seed","span":{"filename":"src/block.rs","begin":[422,4],"end":[424,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["seed",{"kind":"qualified_path","inner":{"name":"Seed","self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:146","args":null,"param_names":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"1:3093":{"id":"1:3093","crate_id":1,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3095","1:3096"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:2963":{"id":"1:2963","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"Infallible","id":"1:36058","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"a:1:8365-0:174":{"id":"a:1:8365-0:174","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8365","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Results","self_type":{"kind":"generic","inner":"R"},"trait":{"kind":"resolved_path","inner":{"name":"BlockRngCore","id":"0:40","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8365","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8365","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:46":{"id":"0:46","crate_id":0,"name":"fmt","span":{"filename":"src/block.rs","begin":[132,4],"end":[138,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:9355","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:9344","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"1:7429":{"id":"1:7429","crate_id":1,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7431"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:81":{"id":"0:81","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/block.rs","begin":[412,4],"end":[415,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["dest",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:44703","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"1:9394":{"id":"1:9394","crate_id":1,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9395"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:166":{"id":"0:166","crate_id":0,"name":"BlockRng","span":{"filename":"src/block.rs","begin":[123,0],"end":[128,1]},"visibility":"public","docs":"A wrapper type implementing [`RngCore`] for some type implementing\n[`BlockRngCore`] with `u32` array buffer; i.e. this can be used to implement\na full RNG from just a `generate` function.\n\nThe `core` field may be accessed directly but the results buffer may not.\nPRNG implementations can simply use a type alias\n(`pub type MyRng = BlockRng<MyRngCore>;`) but might prefer to use a\nwrapper type (`pub struct MyRng(BlockRng<MyRngCore>);`); the latter must\nre-implement `RngCore` but hides the implementation details and allows\nextra functionality to be defined on the RNG\n(e.g. `impl MyRng { fn set_stream(...){...} }`).\n\n`BlockRng` has heavily optimized implementations of the [`RngCore`] methods\nreading values from the results buffer, as well as\ncalling [`BlockRngCore::generate`] directly on the output array when\n[`fill_bytes`] / [`try_fill_bytes`] is called on a large array. These methods\nalso handle the bookkeeping of when to generate a new batch of values.\n\nNo whole generated `u32` values are thown away and all values are consumed\nin-order. [`next_u32`] simply takes the next available `u32` value.\n[`next_u64`] is implemented by combining two `u32` values, least\nsignificant first. [`fill_bytes`] and [`try_fill_bytes`] consume a whole\nnumber of `u32` values, converting each `u32` to a byte slice in\nlittle-endian order. If the requested byte length is not a multiple of 4,\nsome bytes will be discarded.\n\nSee also [`BlockRng64`] which uses `u64` array buffers. Currently there is\nno direct support for other buffer types.\n\nFor easy initialization `BlockRng` also implements [`SeedableRng`].\n\n[`next_u32`]: RngCore::next_u32\n[`next_u64`]: RngCore::next_u64\n[`fill_bytes`]: RngCore::fill_bytes\n[`try_fill_bytes`]: RngCore::try_fill_bytes","links":{"`BlockRngCore`":"0:40","`BlockRngCore::generate`":"0:43","RngCore::try_fill_bytes":"0:144","RngCore::next_u64":"0:142","`RngCore`":"0:140","RngCore::next_u32":"0:141","RngCore::fill_bytes":"0:143","`SeedableRng`":"0:146","`BlockRng64`":"0:174"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BlockRngCore","id":"0:40","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[]},"fields_stripped":true,"fields":["0:170"],"impls":["0:47","a:1:3057-0:166","a:1:3016-0:166","a:1:3028-0:166","a:1:8364-0:166","a:1:8365-0:166","b:1:2960-0:166","b:1:2949-0:166","b:1:2945-0:166","b:1:2955-0:166","b:1:2621-0:166","b:1:2624-0:166","b:1:3679-0:166","0:53","0:89","0:60","0:44","0:171"]}},"a:1:3016-0:174":{"id":"a:1:3016-0:174","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3016","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Results","self_type":{"kind":"generic","inner":"R"},"trait":{"kind":"resolved_path","inner":{"name":"BlockRngCore","id":"0:40","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3016","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3016","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:3461":{"id":"1:3461","crate_id":1,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3463"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"1:3456","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:59":{"id":"0:59","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/block.rs","begin":[237,4],"end":[240,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["dest",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:44703","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"a:1:3057-0:98":{"id":"a:1:3057-0:98","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3057","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:1:2949-0:166":{"id":"b:1:2949-0:166","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2922","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["1:2951"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3057":{"id":"1:3057","crate_id":1,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3227":{"id":"1:3227","crate_id":1,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3228","1:3229"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:143":{"id":"0:143","crate_id":0,"name":"fill_bytes","span":{"filename":"src/lib.rs","begin":[171,4],"end":[171,46]},"visibility":"default","docs":"Fill `dest` with random data.\n\nRNGs must implement at least one method from this trait directly. In\nthe case this method is not implemented directly, it can be implemented\nvia [`impls::fill_bytes_via_next`] or\nvia [`RngCore::try_fill_bytes`]; if this generator can\nfail the implementation must choose how best to handle errors here\n(e.g. panic with a descriptive message or log a warning and retry a few\ntimes).\n\nThis method should guarantee that `dest` is entirely filled\nwith new data, and may panic if this is impossible\n(e.g. reading past the end of a file that is being used as the\nsource of randomness).","links":{"`RngCore::try_fill_bytes`":"0:144","`impls::fill_bytes_via_next`":"0:120"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["dest",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":false}},"a:1:3057-0:174":{"id":"a:1:3057-0:174","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3057","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Results","self_type":{"kind":"generic","inner":"R"},"trait":{"kind":"resolved_path","inner":{"name":"BlockRngCore","id":"0:40","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3057","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3057","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:3144":{"id":"1:3144","crate_id":1,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3146","1:3147"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:58":{"id":"0:58","crate_id":0,"name":"fill_bytes","span":{"filename":"src/block.rs","begin":[222,4],"end":[234,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["dest",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"b:1:2624-0:98":{"id":"b:1:2624-0:98","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2618","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2626"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:2621-0:174":{"id":"b:1:2621-0:174","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2615","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["1:2623"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:179":{"id":"0:179","crate_id":0,"name":"core","span":{"filename":"src/block.rs","begin":[291,4],"end":[291,15]},"visibility":"public","docs":"The *core* part of the RNG, implementing the `generate` function.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"R"}},"1:2714":{"id":"1:2714","crate_id":1,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2716","1:2717","1:2718","1:2719","1:2720"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2667","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:3139":{"id":"1:3139","crate_id":1,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3141","1:3142"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:131":{"id":"0:131","crate_id":0,"name":"next_u64_via_fill","span":{"filename":"src/impls.rs","begin":[143,0],"end":[147,1]},"visibility":"public","docs":"Implement `next_u64` via `fill_bytes`, little-endian order.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["rng",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"R"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RngCore","id":"0:140","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[]},"header":[],"abi":"\"Rust\""}},"1:2951":{"id":"1:2951","crate_id":1,"name":"from","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":["const"],"abi":"\"Rust\"","has_body":true}},"0:43":{"id":"0:43","crate_id":0,"name":"generate","span":{"filename":"src/block.rs","begin":[77,4],"end":[77,56]},"visibility":"default","docs":"Generate a new block of results.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["results",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Results","self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:40","args":null,"param_names":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":false}},"b:1:2624-0:174":{"id":"b:1:2624-0:174","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2618","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["1:2626"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:180":{"id":"0:180","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[284,9],"end":[284,14]},"visibility":{"restricted":{"parent":"0:13","path":"::block"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::clone::Clone","id":"1:2637","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BlockRngCore","id":"0:40","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Results","self_type":{"kind":"generic","inner":"R"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:40","args":null,"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::clone::Clone","id":"1:2637","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2637","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["0:182"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:72":{"id":"0:72","crate_id":0,"name":"new","span":{"filename":"src/block.rs","begin":[310,4],"end":[318,5]},"visibility":"public","docs":"Create a new `BlockRng` from an existing RNG implementing\n`BlockRngCore`. Results will be generated on first use.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["core",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:50":{"id":"0:50","crate_id":0,"name":"index","span":{"filename":"src/block.rs","begin":[160,4],"end":[162,5]},"visibility":"public","docs":"Get the index into the result buffer.\n\nIf this is equal to or larger than the size of the result buffer then\nthe buffer is \"empty\" and `generate()` must be called to produce new\nresults.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:145":{"id":"0:145","crate_id":0,"name":"CryptoRng","span":{"filename":"src/lib.rs","begin":[209,0],"end":[209,22]},"visibility":"public","docs":"A marker trait used to indicate that an [`RngCore`] or [`BlockRngCore`]\nimplementation is supposed to be cryptographically secure.\n\n*Cryptographically secure generators*, also known as *CSPRNGs*, should\nsatisfy an additional properties over other generators: given the first\n*k* bits of an algorithm's output\nsequence, it should not be possible using polynomial-time algorithms to\npredict the next bit with probability significantly greater than 50%.\n\nSome generators may satisfy an additional property, however this is not\nrequired by this trait: if the CSPRNG's state is revealed, it should not be\ncomputationally-feasible to reconstruct output prior to this. Some other\ngenerators allow backwards-computation and are consided *reversible*.\n\nNote that this trait is provided for guidance only and cannot guarantee\nsuitability for cryptographic applications. In general it should only be\nimplemented for well-reviewed code implementing well-regarded algorithms.\n\nNote also that use of a `CryptoRng` does not protect against other\nweaknesses such as seeding from a weak entropy source or leaking state.\n\n[`BlockRngCore`]: block::BlockRngCore","links":{"`RngCore`":"0:140","block::BlockRngCore":"0:40"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":["0:89","0:163"]}},"1:3183":{"id":"1:3183","crate_id":1,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3185"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:102":{"id":"0:102","crate_id":0,"name":"INTERNAL_START","span":{"filename":"src/error.rs","begin":[42,4],"end":[42,44]},"visibility":"public","docs":"Codes below this point represent OS Errors (i.e. positive i32 values).\nCodes at or above this point, but below [`Error::CUSTOM_START`] are\nreserved for use by the `rand` and `getrandom` crates.\n\nThis is identical to [`getrandom::Error::INTERNAL_START`](https://docs.rs/getrandom/latest/getrandom/struct.Error.html#associatedconstant.INTERNAL_START).","links":{"`Error::CUSTOM_START`":"0:98"},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"primitive","inner":"u32"},"default":"1 << 31"}},"1:3468":{"id":"1:3468","crate_id":1,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"1:2703":{"id":"1:2703","crate_id":1,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2704","1:2705","1:2706","1:2707"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2714","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:2637":{"id":"1:2637","crate_id":1,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2638","1:2639"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:9413":{"id":"1:9413","crate_id":1,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9414"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3677":{"id":"1:3677","crate_id":1,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3678"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementors":[]}},"1:22232":{"id":"1:22232","crate_id":1,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:22233"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:22228","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:3505":{"id":"1:3505","crate_id":1,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:110":{"id":"0:110","crate_id":0,"name":"from","span":{"filename":"src/error.rs","begin":[154,4],"end":[165,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["code",{"kind":"resolved_path","inner":{"name":"NonZeroU32","id":"1:23061","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:126":{"id":"0:126","crate_id":0,"name":"fill_via_u32_chunks","span":{"filename":"src/impls.rs","begin":[117,0],"end":[119,1]},"visibility":"public","docs":"Implement `fill_bytes` by reading chunks from the output buffer of a block\nbased RNG.\n\nThe return values are `(consumed_u32, filled_u8)`.\n\n`filled_u8` is the number of filled bytes in `dest`, which may be less than\nthe length of `dest`.\n`consumed_u32` is the number of words consumed from `src`, which is the same\nas `filled_u8 / 4` rounded up.\n\n# Example\n(from `IsaacRng`)\n\n```ignore\nfn fill_bytes(&mut self, dest: &mut [u8]) {\n    let mut read_len = 0;\n    while read_len < dest.len() {\n        if self.index >= self.rsl.len() {\n            self.isaac();\n        }\n\n        let (consumed_u32, filled_u8) =\n            impls::fill_via_u32_chunks(&mut self.rsl[self.index..],\n                                       &mut dest[read_len..]);\n\n        self.index += consumed_u32;\n        read_len += filled_u8;\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["src",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u32"}}}}],["dest",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\""}},"1:7921":{"id":"1:7921","crate_id":1,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Step","id":"1:7015","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:53":{"id":"0:53","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[181,0],"end":[241,1]},"visibility":{"restricted":{"parent":"0:13","path":"::block"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BlockRngCore","id":"0:40","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","binding":{"equality":{"kind":"primitive","inner":"u32"}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Results","self_type":{"kind":"generic","inner":"R"},"trait":{"kind":"resolved_path","inner":{"name":"BlockRngCore","id":"0:40","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"1:2913","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u32"}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsMut","id":"1:2916","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u32"}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RngCore","id":"0:140","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["0:55","0:56","0:58","0:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:56":{"id":"0:56","crate_id":0,"name":"next_u64","span":{"filename":"src/block.rs","begin":[197,4],"end":[219,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:118":{"id":"0:118","crate_id":0,"name":"next_u64_via_u32","span":{"filename":"src/impls.rs","begin":[24,0],"end":[29,1]},"visibility":"public","docs":"Implement `next_u64` via `next_u32`, little-endian order.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["rng",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"R"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RngCore","id":"0:140","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[]},"header":[],"abi":"\"Rust\""}},"1:2958":{"id":"1:2958","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"qualified_path","inner":{"name":"Error","self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2929","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}},"generics":{"params":[],"where_predicates":[]}}},"b:1:2945-0:166":{"id":"b:1:2945-0:166","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2922","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2919","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["1:2948"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3149":{"id":"1:3149","crate_id":1,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3151","1:3152"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:163":{"id":"0:163","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[452,0],"end":[452,58]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"CryptoRng","id":"0:145","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"CryptoRng","id":"0:145","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"R"}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2945-0:174":{"id":"b:1:2945-0:174","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2922","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2919","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["1:2948"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:171":{"id":"0:171","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[115,9],"end":[115,14]},"visibility":{"restricted":{"parent":"0:13","path":"::block"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::clone::Clone","id":"1:2637","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BlockRngCore","id":"0:40","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Results","self_type":{"kind":"generic","inner":"R"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"0:40","args":null,"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::clone::Clone","id":"1:2637","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2637","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["0:173"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:160":{"id":"0:160","crate_id":0,"name":"next_u64","span":{"filename":"src/lib.rs","begin":[402,4],"end":[404,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"1:7462":{"id":"1:7462","crate_id":1,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7464"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:101":{"id":"0:101","crate_id":0,"name":"CUSTOM_START","span":{"filename":"src/error.rs","begin":[36,4],"end":[36,56]},"visibility":"public","docs":"Codes at or above this point can be used by users to define their own\ncustom errors.\n\nThis has a fixed value of `(1 << 31) + (1 << 30) = 0xC000_0000`,\ntherefore the number of values available for custom codes is `1 << 30`.\n\nThis is identical to [`getrandom::Error::CUSTOM_START`](https://docs.rs/getrandom/latest/getrandom/struct.Error.html#associatedconstant.CUSTOM_START).","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"primitive","inner":"u32"},"default":"(1 << 31) + (1 << 30)"}},"1:7646":{"id":"1:7646","crate_id":1,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7647","1:7648","1:7649","1:7650","1:7652","1:7655","1:7656","1:7657","1:7658","1:7660","1:7662","1:7663","1:7665","1:7668","1:7675","1:7677","1:7680","1:7681","1:7682","1:7684","1:7686","1:7689","1:7690","1:7691","1:7695","1:7698","1:7699","1:7700","1:7702","1:7703","1:7705","1:7715","1:7730","1:7732","1:7736","1:7745","1:7748","1:7750","1:7757","1:7764","1:7771","1:7780","1:7791","1:7798","1:7805","1:7806","1:7807","1:7819","1:7826","1:7838","1:7845","1:7846","1:7851","1:7854","1:7857","1:7858","1:7860","1:7862","1:7865","1:7868","1:7871","1:7874","1:7877","1:7880","1:7882","1:7884","1:7886","1:7888","1:7890","1:7891","1:7899"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:70":{"id":"0:70","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[306,0],"end":[347,1]},"visibility":{"restricted":{"parent":"0:13","path":"::block"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BlockRngCore","id":"0:40","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["0:72","0:73","0:74","0:75"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:182":{"id":"0:182","crate_id":0,"name":"clone","span":{"filename":"src/block.rs","begin":[284,9],"end":[284,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}},"0:174":{"id":"0:174","crate_id":0,"name":"BlockRng64","span":{"filename":"src/block.rs","begin":[286,0],"end":[292,1]},"visibility":"public","docs":"A wrapper type implementing [`RngCore`] for some type implementing\n[`BlockRngCore`] with `u64` array buffer; i.e. this can be used to implement\na full RNG from just a `generate` function.\n\nThis is similar to [`BlockRng`], but specialized for algorithms that operate\non `u64` values.\n\nNo whole generated `u64` values are thrown away and all values are consumed\nin-order. [`next_u64`] simply takes the next available `u64` value.\n[`next_u32`] is however a bit special: half of a `u64` is consumed, leaving\nthe other half in the buffer. If the next function called is [`next_u32`]\nthen the other half is then consumed, however both [`next_u64`] and\n[`fill_bytes`] discard the rest of any half-consumed `u64`s when called.\n\n[`fill_bytes`] and [`try_fill_bytes`] consume a whole number of `u64`\nvalues. If the requested length is not a multiple of 8, some bytes will be\ndiscarded.\n\n[`next_u32`]: RngCore::next_u32\n[`next_u64`]: RngCore::next_u64\n[`fill_bytes`]: RngCore::fill_bytes\n[`try_fill_bytes`]: RngCore::try_fill_bytes","links":{"RngCore::next_u32":"0:141","RngCore::fill_bytes":"0:143","RngCore::try_fill_bytes":"0:144","RngCore::next_u64":"0:142","`RngCore`":"0:140","`BlockRngCore`":"0:40","`BlockRng`":"0:166"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BlockRngCore","id":"0:40","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[]},"fields_stripped":true,"fields":["0:179"],"impls":["0:70","a:1:3057-0:174","a:1:3016-0:174","a:1:3028-0:174","a:1:8364-0:174","a:1:8365-0:174","b:1:2960-0:174","b:1:2949-0:174","b:1:2945-0:174","b:1:2955-0:174","b:1:2621-0:174","b:1:2624-0:174","b:1:3679-0:174","0:76","0:82","0:67","0:180"]}},"1:3166":{"id":"1:3166","crate_id":1,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3168"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:13131":{"id":"1:13131","crate_id":1,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:13132","1:13133","1:13134","1:13135","1:13136","1:13137","1:13138"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3383":{"id":"1:3383","crate_id":1,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3385","1:3386","1:3387"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"b:1:2949-0:98":{"id":"b:1:2949-0:98","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2922","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2951"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:2624-0:166":{"id":"b:1:2624-0:166","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2618","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["1:2626"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3154":{"id":"1:3154","crate_id":1,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3156","1:3157"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:2913":{"id":"1:2913","crate_id":1,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2915"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"b:1:2960-0:166":{"id":"b:1:2960-0:166","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2919","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2929","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["1:2963","1:2964"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:98":{"id":"0:98","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[21,0],"end":[26,1]},"visibility":"public","docs":"Error type of random number generators\n\nIn order to be compatible with `std` and `no_std`, this type has two\npossible implementations: with `std` a boxed `Error` trait object is stored,\nwhile with `no_std` we merely store an error code.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:100","a:1:3057-0:98","a:1:3016-0:98","a:1:3028-0:98","a:1:8364-0:98","a:1:8365-0:98","b:1:2960-0:98","b:1:2949-0:98","b:1:2945-0:98","b:1:2955-0:98","b:1:2621-0:98","b:1:2624-0:98","b:1:3679-0:98","0:105","0:107","0:109"]}},"0:139":{"id":"0:139","crate_id":0,"name":"read_u64_into","span":{"filename":"src/le.rs","begin":[27,0],"end":[32,1]},"visibility":"public","docs":"Reads unsigned 64 bit integers from `src` into `dst`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["src",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u64"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\""}},"1:2667":{"id":"1:2667","crate_id":1,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2669","1:2670"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"0:49":{"id":"0:49","crate_id":0,"name":"new","span":{"filename":"src/block.rs","begin":[145,4],"end":[152,5]},"visibility":"public","docs":"Create a new `BlockRng` from an existing RNG implementing\n`BlockRngCore`. Results will be generated on first use.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["core",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":[],"abi":"\"Rust\"","has_body":true}}},"paths":{"1:50410":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:49041":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:8366":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:7649":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","size_hint"],"kind":"foreign_type"},"1:22228":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:60254":{"crate_id":1,"path":["core","f32"],"kind":"primitive"},"1:49752":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:60249":{"crate_id":1,"path":["core","pointer"],"kind":"primitive"},"1:1999":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:45296":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:7425":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:8403":{"crate_id":1,"path":["rand_core","Target"],"kind":"typedef"},"1:48209":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:46708":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:12222":{"crate_id":1,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"1:48080":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:43034":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:46258":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:12019":{"crate_id":1,"path":["core","str","pattern","Searcher","next"],"kind":"foreign_type"},"1:7655":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","advance_by"],"kind":"foreign_type"},"1:9523":{"crate_id":1,"path":["core","fmt","{{impl}}","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:49119":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:2958":{"crate_id":1,"path":["rand_core","Error"],"kind":"typedef"},"1:4299":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"1:46857":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:21668":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:43741":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:3166":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:11714":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:10173":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:45022":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:10472":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:8365":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:44619":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"1:7675":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","filter"],"kind":"foreign_type"},"1:44703":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:60256":{"crate_id":1,"path":["core","i8"],"kind":"primitive"},"1:43218":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:45820":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"1:50512":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:43652":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"1:60267":{"crate_id":1,"path":["core","usize"],"kind":"primitive"},"1:23125":{"crate_id":1,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:9415":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:4782":{"crate_id":1,"path":["core","iter"],"kind":"module"},"1:13131":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"1:60257":{"crate_id":1,"path":["core","i16"],"kind":"primitive"},"1:22997":{"crate_id":1,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:7695":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","flat_map"],"kind":"foreign_type"},"1:3456":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:12007":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:47191":{"crate_id":1,"path":["core","time","FromSecsError"],"kind":"struct"},"1:50384":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:43685":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:10316":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:12964":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"1:45623":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"1:46593":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:3254":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1:7646":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:46949":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:11935":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:9403":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"1:46699":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:44695":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1:21269":{"crate_id":1,"path":["core","core_simd","swizzle","{{impl}}","rotate_lanes_left","Rotate"],"kind":"struct"},"1:48700":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:50355":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:50336":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:3505":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:43833":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:44071":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:44080":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:45130":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:47407":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"1:48167":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:48055":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:12016":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:2527":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:12793":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:50459":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:46358":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:50085":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:7921":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:45607":{"crate_id":1,"path":["core","fmt","FlagV1"],"kind":"enum"},"1:47169":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"1:48629":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:60252":{"crate_id":1,"path":["core","str"],"kind":"primitive"},"1:3144":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:12708":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1:7663":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","intersperse_with"],"kind":"foreign_type"},"1:48825":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:44747":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"1:46742":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:46034":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:46717":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:44062":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:49281":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:60265":{"crate_id":1,"path":["core","u128"],"kind":"primitive"},"1:10444":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:53081":{"crate_id":1,"path":["core","core_simd","fmt","{{impl}}","fmt","Wrapper"],"kind":"struct"},"1:8887":{"crate_id":1,"path":["core","stream","stream","Stream"],"kind":"trait"},"1:3122":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:22703":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:46383":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:10239":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:45838":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:7475":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:7429":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:10197":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"1:12756":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"1:2076":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:7511":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator","next_back"],"kind":"foreign_type"},"1:60268":{"crate_id":1,"path":["core","reference"],"kind":"primitive"},"1:60260":{"crate_id":1,"path":["core","i128"],"kind":"primitive"},"1:46629":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"1:7890":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","is_sorted"],"kind":"foreign_type"},"1:60253":{"crate_id":1,"path":["core","tuple"],"kind":"primitive"},"1:44772":{"crate_id":1,"path":["core","stream","from_iter","FromIter"],"kind":"struct"},"1:46180":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:4":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"1:3183":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:2618":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:6837":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:45598":{"crate_id":1,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:46724":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:46843":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:36121":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:22617":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:3044":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1:48598":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:4434":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:47395":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:48103":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:2714":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:44089":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:43884":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:5726":{"crate_id":1,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"1:21666":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:4749":{"crate_id":1,"path":["rand_core","Target"],"kind":"typedef"},"1:22135":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:43172":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:46493":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:21520":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:45058":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"0:140":{"crate_id":0,"path":["rand_core","RngCore"],"kind":"trait"},"1:11788":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:43151":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:2929":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"1:46249":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:60259":{"crate_id":1,"path":["core","i64"],"kind":"primitive"},"1:46443":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:2310":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:4425":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:46278":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:45289":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:3093":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"0:84":{"crate_id":0,"path":["rand_core","Seed"],"kind":"typedef"},"1:50489":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:22501":{"crate_id":1,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"1:2722":{"crate_id":1,"path":["core","cmp","min"],"kind":"function"},"1:22594":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:10278":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:10351":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:46575":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:50474":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:8037":{"crate_id":1,"path":["rand_core","Target"],"kind":"typedef"},"1:60258":{"crate_id":1,"path":["core","i32"],"kind":"primitive"},"1:50421":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:29970":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:3174":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:23093":{"crate_id":1,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"0:126":{"crate_id":0,"path":["rand_core","impls","fill_via_u32_chunks"],"kind":"function"},"1:3468":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:43241":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"1:47021":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:3316":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:60261":{"crate_id":1,"path":["core","u8"],"kind":"primitive"},"1:22540":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:43126":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"1:11060":{"crate_id":1,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"1:60245":{"crate_id":1,"path":["core","bool"],"kind":"primitive"},"1:47141":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:4370":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:60088":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"1:3114":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:60248":{"crate_id":1,"path":["core","unit"],"kind":"primitive"},"1:43532":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:43616":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:3088":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:48295":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:9344":{"crate_id":1,"path":["core","fmt","Result"],"kind":"typedef"},"1:45522":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"1:43563":{"crate_id":1,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"1:1891":{"crate_id":1,"path":["rand_core","Target"],"kind":"typedef"},"0:146":{"crate_id":0,"path":["rand_core","SeedableRng"],"kind":"trait"},"1:4756":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:48857":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:2615":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"1:43501":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"0:0":{"crate_id":0,"path":["rand_core"],"kind":"module"},"1:11677":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:49394":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:2913":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:43732":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:46401":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:7648":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","next"],"kind":"foreign_type"},"1:48777":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:48272":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:29935":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:2994":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"1:21937":{"crate_id":1,"path":["core","core_simd","select","Select"],"kind":"trait"},"1:47321":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"1:44755":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:21657":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:48448":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:12730":{"crate_id":1,"path":["rand_core","Future"],"kind":"typedef"},"1:3154":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:46874":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:48334":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:49359":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:46368":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:8590":{"crate_id":1,"path":["rand_core","Target"],"kind":"typedef"},"1:2919":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"1:3178":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:45531":{"crate_id":1,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"1:43062":{"crate_id":1,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:2099":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:12020":{"crate_id":1,"path":["core","str","pattern","Searcher","next_match"],"kind":"foreign_type"},"1:45537":{"crate_id":1,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"1:21510":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:7978":{"crate_id":1,"path":["core","lazy","OnceCell"],"kind":"struct"},"1:5605":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:2850":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:7705":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","partition"],"kind":"foreign_type"},"1:48502":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:45546":{"crate_id":1,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"1:47145":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:3170":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:43874":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:7662":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","intersperse"],"kind":"foreign_type"},"1:49328":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:7668":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","for_each"],"kind":"foreign_type"},"1:47357":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:9646":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:47313":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:44878":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:7732":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","try_fold"],"kind":"foreign_type"},"1:4387":{"crate_id":1,"path":["rand_core","Target"],"kind":"typedef"},"1:43672":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:43309":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:3016":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"1:7462":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:43755":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"0:134":{"crate_id":0,"path":["rand_core","le"],"kind":"module"},"1:49895":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:50375":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:7665":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","map"],"kind":"foreign_type"},"1:3026":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:7914":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:49088":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:46240":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:48401":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:36058":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"1:4453":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:21322":{"crate_id":1,"path":["core","core_simd","swizzle","{{impl}}","deinterleave","Even"],"kind":"struct"},"1:60263":{"crate_id":1,"path":["core","u32"],"kind":"primitive"},"1:45303":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:46231":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:46965":{"crate_id":1,"path":["rand_core","Searcher"],"kind":"typedef"},"1:53133":{"crate_id":1,"path":["core","core_simd","fmt","{{impl}}","fmt","Wrapper"],"kind":"struct"},"1:7015":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"1:43580":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:47149":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:14":{"crate_id":1,"path":["core","write"],"kind":"macro"},"1:5532":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:7917":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:46547":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"0:118":{"crate_id":0,"path":["rand_core","impls","next_u64_via_u32"],"kind":"function"},"0:120":{"crate_id":0,"path":["rand_core","impls","fill_bytes_via_next"],"kind":"function"},"1:7745":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","fold"],"kind":"foreign_type"},"1:48881":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:2925":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1:48241":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"0:131":{"crate_id":0,"path":["rand_core","impls","next_u64_via_fill"],"kind":"function"},"1:3024":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:3034":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"1:9601":{"crate_id":1,"path":["core","hash","Hash","hash"],"kind":"foreign_type"},"1:43713":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:26072":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:43784":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:43773":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:47157":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:2638":{"crate_id":1,"path":["core","clone","Clone","clone"],"kind":"foreign_type"},"1:9413":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:53120":{"crate_id":1,"path":["core","core_simd","fmt","{{impl}}","fmt","Wrapper"],"kind":"struct"},"1:23317":{"crate_id":1,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:60266":{"crate_id":1,"path":["core","isize"],"kind":"primitive"},"1:46268":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"0:145":{"crate_id":0,"path":["rand_core","CryptoRng"],"kind":"trait"},"1:3160":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:3463":{"crate_id":1,"path":["core","ops","try_trait","FromResidual","from_residual"],"kind":"foreign_type"},"1:46339":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:48652":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:9077":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:34880":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:45783":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:2090":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:9401":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"0:128":{"crate_id":0,"path":["rand_core","impls","next_u32_via_fill"],"kind":"function"},"1:50006":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:60247":{"crate_id":1,"path":["core","char"],"kind":"primitive"},"1:9960":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:60255":{"crate_id":1,"path":["core","f64"],"kind":"primitive"},"1:43602":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:50148":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:22657":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:21303":{"crate_id":1,"path":["core","core_simd","swizzle","{{impl}}","interleave","Hi"],"kind":"struct"},"1:43555":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:12228":{"crate_id":1,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"1:45576":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"1:22556":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:7518":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator","rfold"],"kind":"foreign_type"},"1:8931":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:4160":{"crate_id":1,"path":["core","array","collect_into_array","Guard"],"kind":"struct"},"1:7245":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:3028":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"1:22710":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:43482":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:43542":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:22673":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"1:2851":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:21324":{"crate_id":1,"path":["core","core_simd","swizzle","{{impl}}","deinterleave","Odd"],"kind":"struct"},"1:43110":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:11457":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:9082":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:2998":{"crate_id":1,"path":["core","default","Default"],"kind":"proc_derive"},"3:0":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"0:174":{"crate_id":0,"path":["rand_core","block","BlockRng64"],"kind":"struct"},"1:44627":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"1:12021":{"crate_id":1,"path":["core","str","pattern","Searcher","next_reject"],"kind":"foreign_type"},"1:43864":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:3130":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:9355":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"1:3461":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:22609":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:46647":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:2667":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:44610":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"1:46529":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:4308":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:2703":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"1:23157":{"crate_id":1,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:46317":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:9969":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:22418":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:3895":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"0:40":{"crate_id":0,"path":["rand_core","block","BlockRngCore"],"kind":"trait"},"1:46689":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:12027":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:44781":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:44950":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:48190":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:2004":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:8926":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:47380":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:0":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"1:45282":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:7730":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","is_partitioned"],"kind":"foreign_type"},"1:2922":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:48962":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:50436":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:53025":{"crate_id":1,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:9610":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:7473":{"crate_id":1,"path":["rand_core","IntoIter"],"kind":"typedef"},"1:7689":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","skip"],"kind":"foreign_type"},"1:0":{"crate_id":1,"path":["core"],"kind":"module"},"1:2672":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"1:43821":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:43723":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:3104":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:43642":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:53055":{"crate_id":1,"path":["core","core_simd","fmt","{{impl}}","fmt","Wrapper"],"kind":"struct"},"1:12974":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:9407":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:48136":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:23029":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:46030":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"0:138":{"crate_id":0,"path":["rand_core","le","read_u32_into"],"kind":"function"},"1:6936":{"crate_id":1,"path":["core","iter","adapters","ResultShunt"],"kind":"struct"},"1:10389":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:12723":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:43517":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:7656":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","nth"],"kind":"foreign_type"},"1:7684":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","take_while"],"kind":"foreign_type"},"1:23285":{"crate_id":1,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:9641":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:3118":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:299":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:12729":{"crate_id":1,"path":["rand_core","Output"],"kind":"typedef"},"1:21931":{"crate_id":1,"path":["core","core_simd","select","sealed","Sealed"],"kind":"trait"},"1:7699":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","fuse"],"kind":"foreign_type"},"1:46348":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:53094":{"crate_id":1,"path":["core","core_simd","fmt","{{impl}}","fmt","Wrapper"],"kind":"struct"},"1:44842":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:60269":{"crate_id":1,"path":["core","fn"],"kind":"primitive"},"1:47000":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:5974":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:47034":{"crate_id":1,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"1:44914":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"0:166":{"crate_id":0,"path":["rand_core","block","BlockRng"],"kind":"struct"},"1:23189":{"crate_id":1,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:47165":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:9345":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"1:7466":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:12022":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"0:139":{"crate_id":0,"path":["rand_core","le","read_u64_into"],"kind":"function"},"1:12860":{"crate_id":1,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"1:9405":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"1:44055":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:47366":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:4380":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"1:34901":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"1:48677":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:50364":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:22232":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:49545":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:7536":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator","len"],"kind":"foreign_type"},"1:43793":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:48007":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:3083":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"1:46986":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:12024":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher","next_back"],"kind":"foreign_type"},"1:43843":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:22725":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:50551":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:48551":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:21301":{"crate_id":1,"path":["core","core_simd","swizzle","{{impl}}","interleave","Lo"],"kind":"struct"},"1:22738":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:8364":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:47137":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:43694":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:48314":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:9028":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"1:47204":{"crate_id":1,"path":["core","time","FromSecsErrorKind"],"kind":"enum"},"1:46304":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:7510":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:50258":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:23253":{"crate_id":1,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:3025":{"crate_id":1,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:8476":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"0:13":{"crate_id":0,"path":["rand_core","block"],"kind":"module"},"1:12073":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:43853":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:13024":{"crate_id":1,"path":["core","task","ready","Ready"],"kind":"struct"},"1:43802":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:46679":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"1:43195":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:3135":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"1:45094":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:43703":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:22523":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:3312":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:3294":{"crate_id":1,"path":["core","ops","generator","Generator"],"kind":"trait"},"1:43609":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:44986":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:53068":{"crate_id":1,"path":["core","core_simd","fmt","{{impl}}","fmt","Wrapper"],"kind":"struct"},"1:46330":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:43274":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"1:50395":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:3126":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:7698":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","flatten"],"kind":"foreign_type"},"1:3257":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:21514":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:3022":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:46475":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"0:111":{"crate_id":0,"path":["rand_core","impls"],"kind":"module"},"1:46733":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:46805":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:11753":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:9411":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1:22581":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:9600":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"1:45830":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:48032":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:22635":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:47161":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:44577":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"1:45808":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:48353":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:3260":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:46425":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"1:49202":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:48479":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:3098":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"1:4441":{"crate_id":1,"path":["rand_core","Target"],"kind":"typedef"},"1:7715":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","partition_in_place"],"kind":"foreign_type"},"1:60246":{"crate_id":1,"path":["core","never"],"kind":"primitive"},"1:3240":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:9409":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"0:62":{"crate_id":0,"path":["rand_core","Seed"],"kind":"typedef"},"1:43812":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:43764":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:23349":{"crate_id":1,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:1952":{"crate_id":1,"path":["core","mem","maybe_uninit","{{impl}}","write_slice_cloned","Guard"],"kind":"struct"},"1:4303":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"1:2203":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:10974":{"crate_id":1,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:60067":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"1:60262":{"crate_id":1,"path":["core","u16"],"kind":"primitive"},"1:44678":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:3383":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:44644":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"1:43586":{"crate_id":1,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"1:29793":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:10458":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:2963":{"crate_id":1,"path":["rand_core","Error"],"kind":"typedef"},"1:11737":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"0:127":{"crate_id":0,"path":["rand_core","impls","fill_via_u64_chunks"],"kind":"function"},"1:21573":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:21256":{"crate_id":1,"path":["core","core_simd","swizzle","{{impl}}","reverse","Reverse"],"kind":"struct"},"1:4735":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:7660":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","zip"],"kind":"foreign_type"},"1:3139":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:46828":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:45791":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:7680":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","enumerate"],"kind":"foreign_type"},"1:8016":{"crate_id":1,"path":["core","lazy","Lazy"],"kind":"struct"},"1:21284":{"crate_id":1,"path":["core","core_simd","swizzle","{{impl}}","rotate_lanes_right","Rotate"],"kind":"struct"},"1:10430":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:45564":{"crate_id":1,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"1:3677":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"1:43488":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:7190":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:44686":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:43623":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:60264":{"crate_id":1,"path":["core","u64"],"kind":"primitive"},"1:46395":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"1:45799":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:10941":{"crate_id":1,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:44763":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"1:44100":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:47133":{"crate_id":1,"path":["core","str","LinesAnyMap"],"kind":"struct"},"1:7535":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:48725":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:23645":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:22335":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:60251":{"crate_id":1,"path":["core","slice"],"kind":"primitive"},"1:46922":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:47303":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:3149":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:47011":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:2916":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"1:53107":{"crate_id":1,"path":["core","core_simd","fmt","{{impl}}","fmt","Wrapper"],"kind":"struct"},"1:3227":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:3110":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"0:98":{"crate_id":0,"path":["rand_core","Error"],"kind":"struct"},"1:9612":{"crate_id":1,"path":["core","hash","Hasher","write"],"kind":"foreign_type"},"1:3251":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:60250":{"crate_id":1,"path":["core","array"],"kind":"primitive"},"1:44806":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:23061":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:50297":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:10149":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:3057":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:9603":{"crate_id":1,"path":["core","hash","Hash","hash_slice"],"kind":"foreign_type"},"1:9394":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1:7472":{"crate_id":1,"path":["rand_core","Item"],"kind":"typedef"},"1:47986":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:7748":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","reduce"],"kind":"foreign_type"},"1:46411":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:23221":{"crate_id":1,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:50211":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:47153":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:2637":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"1:4234":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"1:3021":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:44635":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"}},"external_crates":{"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":9}